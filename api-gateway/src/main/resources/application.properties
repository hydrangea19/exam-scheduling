spring.application.name=api-gateway
spring.profiles.active=dev

spring.main.web-application-type=reactive

# === Spring Cloud Gateway Routes ===
# User Management Service
spring.cloud.gateway.routes[0].id=user-management
spring.cloud.gateway.routes[0].uri=http://localhost:8001
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/users/(.*), /api/users/$1

# External Integration Service
spring.cloud.gateway.routes[1].id=external-integration
spring.cloud.gateway.routes[1].uri=http://localhost:8002
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/external/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/external/(.*), /api/$1

# Preference Management Service
spring.cloud.gateway.routes[2].id=preference-management
spring.cloud.gateway.routes[2].uri=http://localhost:8003
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/preferences/**,/api/professor/**,/api/admin/sessions/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/(.*), /api/$1

# Scheduling Service
spring.cloud.gateway.routes[3].id=scheduling
spring.cloud.gateway.routes[3].uri=http://localhost:8004
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/scheduling/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/scheduling/(.*), /api/$1

# Publishing Service
spring.cloud.gateway.routes[4].id=publishing
spring.cloud.gateway.routes[4].uri=http://localhost:8005
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/publishing/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/api/publishing/(.*), /api/$1

# === Test Routes ===
spring.cloud.gateway.routes[5].id=test-user-management
spring.cloud.gateway.routes[5].uri=http://localhost:8001
spring.cloud.gateway.routes[5].predicates[0]=Path=/test/users/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/test/users/(.*), /api/test/$1
spring.cloud.gateway.routes[6].id=test-external
spring.cloud.gateway.routes[6].uri=http://localhost:8002
spring.cloud.gateway.routes[6].predicates[0]=Path=/test/external/**
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/test/external/(.*), /api/test/$1
spring.cloud.gateway.routes[7].id=test-preferences
spring.cloud.gateway.routes[7].uri=http://localhost:8003
spring.cloud.gateway.routes[7].predicates[0]=Path=/test/preferences/**
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/test/preferences/(.*), /api/test/$1
spring.cloud.gateway.routes[8].id=test-scheduling
spring.cloud.gateway.routes[8].uri=http://localhost:8004
spring.cloud.gateway.routes[8].predicates[0]=Path=/test/scheduling/**
spring.cloud.gateway.routes[8].filters[0]=RewritePath=/test/scheduling/(.*), /api/test/$1
spring.cloud.gateway.routes[9].id=test-publishing
spring.cloud.gateway.routes[9].uri=http://localhost:8005
spring.cloud.gateway.routes[9].predicates[0]=Path=/test/publishing/**
spring.cloud.gateway.routes[9].filters[0]=RewritePath=/test/publishing/(.*), /api/test/$1

spring.cloud.gateway.routes[10].id=auth
spring.cloud.gateway.routes[10].uri=http://localhost:8001
spring.cloud.gateway.routes[10].predicates[0]=Path=/api/auth/**

server.port=8000

management.endpoints.web.exposure.include=health,info,env
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always

logging.level.mk.ukim.finki.examscheduling.apigateway=DEBUG
logging.level.org.springframework.security=DEBUG

# JWT Configuration
jwt.secret=/yDjMGkD+VpXX6oyBrrTgLdEvgjxtU6FfT55eghX559ihLtbP9XI3M1UTOi1pTAl
jwt.expiration=86400

# Security Configuration
security.jwt.enabled=true

# Add component scan for shared security classes
spring.main.allow-bean-definition-overriding=true

# Keycloak Configuration
keycloak.server.url=http://localhost:8090
keycloak.realm=exam-scheduling
keycloak.client-id=exam-scheduling-backend
keycloak.client-secret=exam-scheduling-backend-secret-key-dev

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.server.url}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak.server.url}/realms/${keycloak.realm}/protocol/openid-connect/certs

# Cross-origin resource sharing
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000,http://localhost:8080,http://localhost:5173
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
