spring.application.name=user-management-service
spring.profiles.active=dev

spring.datasource.url=jdbc:postgresql://localhost:5432/exam_scheduler_dev
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=5

# External service configuration
external-services.external-integration.base-url=http://localhost:8002
external-services.external-integration.timeout=5000

# Resilience4j circuit breaker
resilience4j.circuitbreaker.instances.external-integration-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.external-integration-service.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.external-integration-service.sliding-window-size=10
resilience4j.circuitbreaker.instances.external-integration-service.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.external-integration-service.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.external-integration-service.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.external-integration-service.register-health-indicator=true

# Resilience4j retry
resilience4j.retry.instances.external-integration-service.max-attempts=3
resilience4j.retry.instances.external-integration-service.wait-duration=2s

# Resilience4j time limiter
resilience4j.timelimiter.instances.external-integration-service.timeout-duration=5s

# Only for Phase 1
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

server.port=8001

management.endpoints.web.exposure.include=health,info,env
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always

logging.level.mk.ukim.finki.examscheduling.usermanagement=DEBUG
logging.level.org.springframework.security=DEBUG

# JWT Configuration
jwt.secret=/yDjMGkD+VpXX6oyBrrTgLdEvgjxtU6FfT55eghX559ihLtbP9XI3M1UTOi1pTAl
jwt.expiration=86400

# Security Configuration
security.jwt.enabled=true

# Keycloak Configuration
keycloak.server.url=http://localhost:8090
keycloak.realm=exam-scheduling
keycloak.client-id=exam-scheduling-backend
keycloak.client-secret=exam-scheduling-backend-secret-key-dev

# OAuth2 Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.server.url}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak.server.url}/realms/${keycloak.realm}/protocol/openid-connect/certs

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.client-id}
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak.client-secret}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=password
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email

spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak.server.url}/realms/${keycloak.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak.server.url}/realms/${keycloak.realm}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=${keycloak.server.url}/realms/${keycloak.realm}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${keycloak.server.url}/realms/${keycloak.realm}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Authentication method preference
authentication.method=both
authentication.keycloak.enabled=true
authentication.test.enabled=true

# Axon Server Configuration
axon.axonserver.servers=localhost:8124
axon.axonserver.client-id=user-management-service
axon.axonserver.component-name=user-management-service
axon.axonserver.context=default

# Event Store Configuration
axon.eventhandling.processors.userProcessor.mode=subscribing
axon.eventhandling.processors.default.source=eventBus

# Serializer Configuration
axon.serializer.general=jackson
axon.serializer.events=jackson
axon.serializer.messages=jackson

# Enable distributed command bus
axon.distributed.enabled=false

# Snapshot Configuration
axon.aggregate.snapshot-threshold=10

# Enable Axon Health Indicators
axon.axonserver.heartbeat.enabled=true
axon.axonserver.heartbeat.interval=5000
axon.axonserver.heartbeat.timeout=5000

axon.axonserver.query-timeout=10000
axon.axonserver.command-timeout=10000

